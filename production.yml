version: '2'

volumes:
  postgres_data: {}
  postgres_backup: {}

services:
  postgres:
    build: ./compose/postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backup:/backups
    env_file: .env
    restart: always

  django:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    depends_on:
      - postgres
      - redis
    command: /gunicorn.sh
    env_file: .env
    restart: always

  irc:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    depends_on:
      - postgres
      - django
    command: python /app/manage.py ircbot
    env_file: .env
    restart: always

  nginx:
    build: ./compose/nginx
    depends_on:
      - django
      - certbot

    ports:
      - "0.0.0.0:80:80"

    environment:
      - MY_DOMAIN_NAME=gumiya.pmrowla.com
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
    restart: always

  certbot:
    image: certbot/certbot
    command: ["/bin/sh", "-c", "sleep 6 && certbot certonly -n --standalone -d gumiya.pmrowla.com --text --agree-tos --email peter@pmrowla.com --rsa-key-size 4096 --verbose --keep-until-expiring --preferred-challenges=http"]
    entrypoint: ""
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
    ports:
      - "80"
      - "443"
    environment:
      - TERM=xterm

  redis:
    image: redis:3.0
    restart: always
